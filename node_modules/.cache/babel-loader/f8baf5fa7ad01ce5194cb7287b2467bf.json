{"ast":null,"code":"import _slicedToArray from\"/Users/daniyarabkeyev/Desktop/juniorbank/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/daniyarabkeyev/Desktop/juniorbank/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{makeStyles,withStyles}from'@material-ui/core/styles';import{Paper,Tab,Tabs}from'@material-ui/core';import Typography from'@material-ui/core/Typography';import SwipeableViews from'react-swipeable-views';function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return React.createElement(Typography,Object.assign({component:\"div\",role:\"tabpanel\",hidden:value!==index,id:\"simple-tabpanel-\".concat(index),\"aria-labelledby\":\"simple-tab-\".concat(index)},other),value===index&&React.createElement(\"div\",null,children));}function a11yProps(index){return{id:\"simple-tab-\".concat(index),'aria-controls':\"simple-tabpanel-\".concat(index)};}var useStyles=makeStyles(function(theme){return{root:{flexGrow:1,backgroundColor:theme.palette.background.paper},tab:{fontStyle:'normal',fontWeight:500,fontSize:'16px',lineHeight:'24px',textTransform:'none'}};});var StyledTabs=withStyles({root:{borderBottom:'1px solid #C4C4C4'},indicator:{display:'flex',justifyContent:'center',backgroundColor:'#FFFFFF','& > div':{width:'100%',backgroundColor:'#2D72E5'}}})(function(props){return React.createElement(Tabs,Object.assign({},props,{TabIndicatorProps:{children:React.createElement(\"div\",null)}}));});export default function SimpleTabs(props){var classes=useStyles({});var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var handleChange=function handleChange(event,newValue){setValue(newValue);};var handleChangeIndex=function handleChangeIndex(index){setValue(index);props.onHandleChanged(index);};return React.createElement(\"div\",{className:classes.root},React.createElement(Paper,{elevation:0,square:true},React.createElement(StyledTabs,{value:value,onChange:handleChange},props.menuTitle.map(function(m,i){return React.createElement(Tab,Object.assign({key:i,label:m},a11yProps(i),{className:classes.tab}));}))),React.createElement(SwipeableViews,{axis:'x',index:value,onChangeIndex:handleChangeIndex},props.pans.map(function(m,i){return React.createElement(TabPanel,{key:i,value:value,index:i},m);})));}","map":{"version":3,"sources":["/Users/daniyarabkeyev/Desktop/juniorbank/src/components/AdditionalInfo/Tab.tsx"],"names":["React","makeStyles","withStyles","Paper","Tab","Tabs","Typography","SwipeableViews","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tab","fontStyle","fontWeight","fontSize","lineHeight","textTransform","StyledTabs","borderBottom","indicator","display","justifyContent","width","SimpleTabs","classes","useState","setValue","handleChange","event","newValue","handleChangeIndex","onHandleChanged","menuTitle","map","m","i","pans"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { Paper, Tab, Tabs } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport SwipeableViews from 'react-swipeable-views';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div>{children}</div>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tab: {\n    fontStyle: 'normal',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '24px',\n    textTransform: 'none'\n  }\n}));\n\ninterface StyledTabsProps {\n  value: number;\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\n}\n\nconst StyledTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #C4C4C4'\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF',\n    '& > div': {\n      width: '100%',\n      backgroundColor: '#2D72E5',\n    },\n  },\n})((props: StyledTabsProps) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\n\ninterface SimpleTabsProps {\n  menuTitle: Array<string>;\n  pans: Array<React.ReactNode>;\n  onHandleChanged: Function;\n}\n\nexport default function SimpleTabs(props: SimpleTabsProps) {\n  const classes = useStyles({});\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n    props.onHandleChanged(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} square={true}>\n        <StyledTabs value={value} onChange={handleChange}>\n          {\n            props.menuTitle.map((m, i) =>\n              <Tab key={i} label={m} {...a11yProps(i)} className={classes.tab} />)\n          }\n        </StyledTabs>\n      </Paper>\n\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}>\n        {props.pans.map((m, i) =>\n          <TabPanel key={i} value={value} index={i}>\n            {m}\n          </TabPanel>\n        )}\n      </SwipeableViews>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}