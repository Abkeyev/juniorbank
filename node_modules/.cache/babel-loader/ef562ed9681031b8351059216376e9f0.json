{"ast":null,"code":"import _slicedToArray from \"/Users/daniyarabkeyev/Desktop/junior/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/daniyarabkeyev/Desktop/junior/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/daniyarabkeyev/Desktop/junior/src/components/AdditionalInfo/Tab.tsx\";\nimport React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { Paper, Tab, Tabs } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport SwipeableViews from 'react-swipeable-views';\n\nfunction TabPanel(props) {\n  const children = props.children,\n        value = props.value,\n        index = props.index,\n        other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return React.createElement(Typography, Object.assign({\n    component: \"div\",\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), value === index && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tab: {\n    fontStyle: 'normal',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '24px',\n    textTransform: 'none'\n  }\n}));\nconst StyledTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #C4C4C4'\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF',\n    '& > div': {\n      width: '100%',\n      backgroundColor: '#2D72E5'\n    }\n  }\n})(props => React.createElement(Tabs, Object.assign({}, props, {\n  TabIndicatorProps: {\n    children: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n})));\nexport default function SimpleTabs(props) {\n  const classes = useStyles({});\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n    props.onHandleChanged(index);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    elevation: 0,\n    square: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(StyledTabs, {\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, props.menuTitle.map((m, i) => React.createElement(Tab, Object.assign({\n    key: i,\n    label: m\n  }, a11yProps(i), {\n    className: classes.tab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))))), React.createElement(SwipeableViews, {\n    axis: 'x',\n    index: value,\n    onChangeIndex: handleChangeIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, props.pans.map((m, i) => React.createElement(TabPanel, {\n    key: i,\n    value: value,\n    index: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, m))));\n}","map":{"version":3,"sources":["/Users/daniyarabkeyev/Desktop/junior/src/components/AdditionalInfo/Tab.tsx"],"names":["React","makeStyles","withStyles","Paper","Tab","Tabs","Typography","SwipeableViews","TabPanel","props","children","value","index","other","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tab","fontStyle","fontWeight","fontSize","lineHeight","textTransform","StyledTabs","borderBottom","indicator","display","justifyContent","width","SimpleTabs","classes","useState","setValue","handleChange","event","newValue","handleChangeIndex","onHandleChanged","menuTitle","map","m","i","pans"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAA4BC,UAA5B,QAA8C,0BAA9C;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAQA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAAA,QAC9BC,QAD8B,GACOD,KADP,CAC9BC,QAD8B;AAAA,QACpBC,KADoB,GACOF,KADP,CACpBE,KADoB;AAAA,QACbC,KADa,GACOH,KADP,CACbG,KADa;AAAA,QACHC,KADG,4BACOJ,KADP;;AAGtC,SACE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAHpB;AAIE,IAAA,EAAE,EAAG,mBAAkBA,KAAM,EAJ/B;AAKE,uBAAkB,cAAaA,KAAM;AALvC,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQGF,KAAK,KAAKC,KAAV,IAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,QAAN,CARtB,CADF;AAYD;;AAED,SAASI,SAAT,CAAmBF,KAAnB,EAA+B;AAC7B,SAAO;AACLG,IAAAA,EAAE,EAAG,cAAaH,KAAM,EADnB;AAEL,qBAAkB,mBAAkBA,KAAM;AAFrC,GAAP;AAID;;AAED,MAAMI,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAmB;AAC9CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,eAAe,EAAEH,KAAK,CAACI,OAAN,CAAcC,UAAd,CAAyBC;AAFtC,GADwC;AAK9CC,EAAAA,GAAG,EAAE;AACHC,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,UAAU,EAAE,GAFT;AAGHC,IAAAA,QAAQ,EAAE,MAHP;AAIHC,IAAAA,UAAU,EAAE,MAJT;AAKHC,IAAAA,aAAa,EAAE;AALZ;AALyC,CAAnB,CAAD,CAA5B;AAmBA,MAAMC,UAAU,GAAG5B,UAAU,CAAC;AAC5BgB,EAAAA,IAAI,EAAE;AACJa,IAAAA,YAAY,EAAE;AADV,GADsB;AAI5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTd,IAAAA,eAAe,EAAE,SAHR;AAIT,eAAW;AACTe,MAAAA,KAAK,EAAE,MADE;AAETf,MAAAA,eAAe,EAAE;AAFR;AAJF;AAJiB,CAAD,CAAV,CAafX,KAAD,IAA4B,oBAAC,IAAD,oBAAUA,KAAV;AAAiB,EAAA,iBAAiB,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAZ,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAbZ,CAAnB;AAsBA,eAAe,SAAS0B,UAAT,CAAoB3B,KAApB,EAA4C;AACzD,QAAM4B,OAAO,GAAGrB,SAAS,CAAC,EAAD,CAAzB;;AADyD,0BAE/BhB,KAAK,CAACsC,QAAN,CAAe,CAAf,CAF+B;AAAA;AAAA,QAElD3B,KAFkD;AAAA,QAE3C4B,QAF2C;;AAIzD,QAAMC,YAAY,GAAG,CAACC,KAAD,EAA+BC,QAA/B,KAAoD;AACvEH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAI/B,KAAD,IAAmB;AAC3C2B,IAAAA,QAAQ,CAAC3B,KAAD,CAAR;AACAH,IAAAA,KAAK,CAACmC,eAAN,CAAsBhC,KAAtB;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAEyB,OAAO,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,MAAM,EAAE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEP,KAAnB;AAA0B,IAAA,QAAQ,EAAE6B,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI/B,KAAK,CAACoC,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAClB,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,KAAK,EAAED;AAApB,KAA2BjC,SAAS,CAACkC,CAAD,CAApC;AAAyC,IAAA,SAAS,EAAEX,OAAO,CAACb,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFJ,CADF,CADF,EAUE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAE,GADR;AAEE,IAAA,KAAK,EAAEb,KAFT;AAGE,IAAA,aAAa,EAAEgC,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGlC,KAAK,CAACwC,IAAN,CAAWH,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KACd,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,CAAf;AAAkB,IAAA,KAAK,EAAErC,KAAzB;AAAgC,IAAA,KAAK,EAAEqC,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CADH,CADD,CAJH,CAVF,CADF;AAuBD","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { Paper, Tab, Tabs } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport SwipeableViews from 'react-swipeable-views';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <div>{children}</div>}\n    </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper\n  },\n  tab: {\n    fontStyle: 'normal',\n    fontWeight: 500,\n    fontSize: '16px',\n    lineHeight: '24px',\n    textTransform: 'none'\n  }\n}));\n\ninterface StyledTabsProps {\n  value: number;\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\n}\n\nconst StyledTabs = withStyles({\n  root: {\n    borderBottom: '1px solid #C4C4C4'\n  },\n  indicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: '#FFFFFF',\n    '& > div': {\n      width: '100%',\n      backgroundColor: '#2D72E5',\n    },\n  },\n})((props: StyledTabsProps) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\n\ninterface SimpleTabsProps {\n  menuTitle: Array<string>;\n  pans: Array<React.ReactNode>;\n  onHandleChanged: Function;\n}\n\nexport default function SimpleTabs(props: SimpleTabsProps) {\n  const classes = useStyles({});\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n    props.onHandleChanged(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={0} square={true}>\n        <StyledTabs value={value} onChange={handleChange}>\n          {\n            props.menuTitle.map((m, i) =>\n              <Tab key={i} label={m} {...a11yProps(i)} className={classes.tab} />)\n          }\n        </StyledTabs>\n      </Paper>\n\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}>\n        {props.pans.map((m, i) =>\n          <TabPanel key={i} value={value} index={i}>\n            {m}\n          </TabPanel>\n        )}\n      </SwipeableViews>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}